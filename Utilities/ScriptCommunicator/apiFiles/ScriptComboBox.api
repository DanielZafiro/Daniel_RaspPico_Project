ScriptComboBox::setEnabled(bool isEnabled):void \nEnables or disables the widget.
ScriptComboBox::hide(void):void \nHides the widget.
ScriptComboBox::show(void):void \nShows the widget.
ScriptComboBox::setBackgroundColor(String color):void \nSets the background color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
ScriptComboBox::setWindowTextColor(String color):void \nSets the window text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
ScriptComboBox::setTextColor(String color):void \nSets the text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
ScriptComboBox::setPaletteColor(String palette, String color):void \nSets a palette color of a script gui element.\nPossible palette values are: Base, Foreground, Background, WindowText, Window, Text and ButtonText.\nPossible colors are: black, white, gray, red, green, blue, cyan, magenta and yellow.
ScriptComboBox::setPaletteColorRgb(quint8 red, quint8 green, quint8 blue, String palette):void \nSets a palette color of a script gui element. Possible palette values are:\nBase, Foreground, Background, WindowText, Window, Text and ButtonText.
ScriptComboBox::setToolTip(String text, int duration):void \nSets the tool tip of the script gui element.\nIf the duration is -1 (default) the duration is calculated depending on the length of the tool tip.
ScriptComboBox::isVisible(void):bool \nReturn true, if the widget is visible.
ScriptComboBox::setFocus(void):void \nGives the keyboard input focus to this widget.
ScriptComboBox::width(void):int \nReturns the width of the widget excluding any window frame.
ScriptComboBox::height(void):int \nReturns the height of the widget excluding any window frame.
ScriptComboBox::setAdditionalData(int key, String data):void \nSets/stores an additional data entry.
ScriptComboBox::getAdditionalData(int key):String \nReturns an additional data entry.
ScriptComboBox::blockSignals(bool block):bool \nIf block is true, signals emitted by this object are blocked\n(i.e., emitting a signal will not invoke anything connected to it).\nIf block is false, no such blocking will occur.\nThe return value is the previous value of the blocking state.
ScriptComboBox::getClassName(void):String \nReturns the class name of this object.
ScriptComboBox::getObjectName(void):String \nReturns the name of this object (UI_'object name in the ui file').\nNote: This function returns only a not empty string for GUI elements from ui files\nor if the function setObjectName has been called for the current object.
ScriptComboBox::setObjectName(String name):void \nSets the name of the current object (can be retrieved with getObjectName).
ScriptComboBox::addItem(const String text):void \nAdds one item to the combo box.
ScriptComboBox::insertItem(int index, const String text):void \nInserts one item into the combo box.
ScriptComboBox::removeItem(int index):void \nRemoves one item from the combo box.
ScriptComboBox::setEditable(bool editable):void \nSets the editable property of the combo box.\nIf the editable property is true, then the text of the selected item can be changed.
ScriptComboBox::isEditable(void):bool \nReturns true if the combo box is editable.\nIf the editable property is true, then the text of the selected item can be changed.
ScriptComboBox::currentIndex(void):int \nReturns the index of the current selected item.
ScriptComboBox::currentText(void):String \nReturns the text of the current selected item.
ScriptComboBox::itemText(int index):String \nReturns the item (identified by index) text.
ScriptComboBox::setItemText(int index, const String text):void \nSets the item (identified by index) text.
ScriptComboBox::setCurrentText(const String text):void \nSets the text of the current selected item.
ScriptComboBox::setCurrentIndex(int index):void \nSets the index of the current selected item.
ScriptComboBox::count(void):int \nReturns the number of items in the combo box.  
ScriptComboBox::clear(void):void \nClears the combo box and removes all items.
ScriptComboBox::currentTextChangedSignal.connect(String newText) \nThis signal is emitted if the text of the current selected item has been changed\n(new index or the text has been modified).
ScriptComboBox::currentIndexChangedSignal.connect(int currentSelectedIndex) \nThis signal is emitted if the current selected index has been changed.